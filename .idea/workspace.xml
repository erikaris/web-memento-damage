<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="abb02a85-edb0-4070-84af-33ef9785e6b3" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/boom/images/boom.png" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/blink_image_resources_200_percent.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/content_resources_200_percent.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/content_shell.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/electron" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/icudtl.dat" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/libffmpeg.so" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/libnode.so" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/am.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/ar.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/bg.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/bn.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/ca.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/cs.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/da.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/de.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/el.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/en-GB.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/en-US.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/es-419.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/es.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/et.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/fa.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/fake-bidi.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/fi.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/fil.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/fr.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/gu.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/he.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/hi.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/hr.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/hu.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/id.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/it.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/ja.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/kn.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/ko.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/lt.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/lv.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/ml.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/mr.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/ms.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/nb.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/nl.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/pl.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/pt-BR.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/pt-PT.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/ro.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/ru.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/sk.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/sl.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/sr.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/sv.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/sw.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/ta.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/te.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/th.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/tr.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/uk.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/vi.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/zh-CN.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/locales/zh-TW.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/natives_blob.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/resources/default_app.asar" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/resources/electron.asar" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/snapshot_blob.bin" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/ui_resources_200_percent.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/views_resources_200_percent.pak" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/images/hawk.png" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/images/logo.png" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/images/hoek.png" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/multiple.png" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/electron" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/electron-download" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/extract-zip" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/har-validator" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/jsesc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/minstache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/mkdirp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/nugget" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/pretty-bytes" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/rc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/rimraf" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/semver" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/sshpk-conv" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/sshpk-sign" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/sshpk-verify" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/strip-indent" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/strip-json-comments" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/uuid" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/.bin/vo" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ansi-regex/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ansi-regex/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ansi-regex/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ansi-regex/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ansi-styles/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ansi-styles/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ansi-styles/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ansi-styles/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/implementation.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/implementation.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/index.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/loader.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/optional.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register-shim.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/bluebird.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/bluebird.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/es6-promise.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/es6-promise.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/lie.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/lie.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/native-promise-only.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/native-promise-only.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/pinkie.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/pinkie.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/promise.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/promise.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/q.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/q.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/rsvp.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/rsvp.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/vow.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/vow.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/when.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/any-promise/register/when.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/array-find-index/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/array-find-index/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/array-find-index/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/array-find-index/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/lib/ber/errors.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/lib/ber/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/lib/ber/reader.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/lib/ber/types.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/lib/ber/writer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/tst/ber/reader.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asn1/tst/ber/writer.test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/assert-plus/AUTHORS" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/assert-plus/CHANGES.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/assert-plus/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/assert-plus/assert.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/assert-plus/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/bench.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/abort.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/async.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/defer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/iterate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/readable_asynckit.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/readable_parallel.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/readable_serial.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/readable_serial_ordered.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/state.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/streamify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/lib/terminator.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/parallel.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/serial.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/serialOrdered.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/asynckit/stream.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws-sign2/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws-sign2/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws-sign2/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws-sign2/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws4/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws4/.tern-port" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws4/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws4/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws4/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws4/aws4.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws4/lru.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/aws4/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/balanced-match/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/balanced-match/LICENSE.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/balanced-match/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/balanced-match/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/balanced-match/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bcrypt-pbkdf/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bcrypt-pbkdf/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bcrypt-pbkdf/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/LICENSE.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/bl.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/isarray/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/isarray/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/isarray/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/isarray/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/doc/stream.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/doc/wg-meetings/2015-01-30.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/lib/_stream_duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/lib/_stream_passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/lib/_stream_readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/node_modules/readable-stream/writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/bl/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/boom/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/boom/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/boom/CONTRIBUTING.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/boom/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/boom/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/boom/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/boom/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/boom/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/brace-expansion/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/brace-expansion/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/brace-expansion/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/builtin-modules/builtin-modules.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/builtin-modules/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/builtin-modules/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/builtin-modules/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/builtin-modules/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/builtin-modules/static.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/camelcase-keys/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/camelcase-keys/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/camelcase-keys/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/camelcase-keys/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/camelcase/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/camelcase/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/camelcase/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/camelcase/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/caseless/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/caseless/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/caseless/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/caseless/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/caseless/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/chalk/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/chalk/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/chalk/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/chalk/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/clone/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/clone/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/clone/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/clone/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/clone/clone.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/clone/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/clone/test-apart-ctx.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/clone/test.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/clone/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/co/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/co/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/co/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/code-point-at/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/code-point-at/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/code-point-at/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/code-point-at/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combine-errors/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combine-errors/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combine-errors/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combine-errors/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combine-errors/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combine-errors/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combine-errors/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combined-stream/License" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combined-stream/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combined-stream/lib/combined_stream.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/combined-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/commander/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/commander/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/commander/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/commander/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/commander/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-map/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-map/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-map/README.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-map/example/map.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-map/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-map/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-map/test/map.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/isarray/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/isarray/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/isarray/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/isarray/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/doc/stream.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/doc/wg-meetings/2015-01-30.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/node_modules/readable-stream/writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/concat-stream/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/core-util-is/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/core-util-is/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/core-util-is/float.patch" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/core-util-is/lib/util.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/core-util-is/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/core-util-is/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/cryptiles/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/cryptiles/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/cryptiles/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/cryptiles/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/cryptiles/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/cryptiles/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/cryptiles/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/currently-unhandled/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/currently-unhandled/core.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/currently-unhandled/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/currently-unhandled/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/currently-unhandled/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/currently-unhandled/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/dashdash/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/dashdash/etc/dashdash.bash_completion.in" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/dashdash/lib/dashdash.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/dashdash/node_modules/assert-plus/AUTHORS" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/dashdash/node_modules/assert-plus/CHANGES.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/dashdash/node_modules/assert-plus/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/dashdash/node_modules/assert-plus/assert.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/dashdash/node_modules/assert-plus/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/dashdash/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/bower.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/node.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/debug/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/decamelize/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/decamelize/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/decamelize/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/decamelize/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-defaults/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-defaults/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-defaults/LICENSE.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-defaults/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-defaults/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-defaults/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-defaults/test/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-defaults/test/mocha.opts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-defaults/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-extend/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-extend/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-extend/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-extend/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-extend/lib/deep-extend.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/deep-extend/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/defaults/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/defaults/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/defaults/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/defaults/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/defaults/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/defaults/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/delayed-stream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/delayed-stream/License" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/delayed-stream/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/delayed-stream/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/delayed-stream/lib/delayed_stream.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/delayed-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ecc-jsbn/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ecc-jsbn/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ecc-jsbn/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ecc-jsbn/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ecc-jsbn/lib/LICENSE-jsbn" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ecc-jsbn/lib/ec.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ecc-jsbn/lib/sec.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ecc-jsbn/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ecc-jsbn/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-download/build/cli.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-download/build/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-download/collaborators.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-download/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-download/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/CONTRIBUTING.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/appveyor.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/cli.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/LICENSES.chromium.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/dist/version" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/install.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/issue_template.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/path.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/electron-prebuilt/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/duo.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-better-batch@0.0.1/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-better-batch@0.0.1/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-better-batch@0.0.1/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-better-batch@0.0.1/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-better-batch@0.0.1/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-better-batch@0.0.1/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-better-batch@0.0.1/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-wrap-fn@0.0.1/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-wrap-fn@0.0.1/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-wrap-fn@0.0.1/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-wrap-fn@0.0.1/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-wrap-fn@0.0.1/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-wrap-fn@0.0.1/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/matthewmueller-wrap-fn@0.0.1/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/visionmedia-co@3.1.0/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/visionmedia-co@3.1.0/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/visionmedia-co@3.1.0/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/visionmedia-co@3.1.0/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/components/visionmedia-co@3.1.0/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/bench.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/lib/sliced.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/node_modules/sliced/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/enqueue/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/error-ex/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/error-ex/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/error-ex/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/error-ex/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/dist/es6-promise.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/dist/es6-promise.map" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/dist/es6-promise.min.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/dist/es6-promise.min.map" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/es6-promise.d.ts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/-internal.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/asap.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/enumerator.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/polyfill.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/promise.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/promise/all.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/promise/race.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/promise/reject.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/promise/resolve.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/then.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/lib/es6-promise/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/es6-promise/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/escape-string-regexp/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/escape-string-regexp/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/escape-string-regexp/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/escape-string-regexp/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extend/.eslintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extend/.jscs.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extend/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extend/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extend/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extend/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extend/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extend/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extend/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extend/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/CONTRIBUTING.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/cli.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/.bin/mkdirp" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/debug/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/debug/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/debug/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/debug/lib/debug.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/debug/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/example/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/test/dash.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/test/default_bool.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/test/dotted.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/test/long.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/test/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/test/parse_modified.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/test/short.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/minimist/test/whitespace.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/bin/cmd.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/bin/usage.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/examples/pow.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/chmod.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/clobber.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/mkdirp.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/opts_fs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/opts_fs_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/perm.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/perm_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/race.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/rel.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/return.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/return_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/root.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/umask.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/node_modules/mkdirp/test/umask_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extract-zip/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extsprintf/.gitmodules" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extsprintf/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extsprintf/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extsprintf/Makefile.deps" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extsprintf/Makefile.targ" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extsprintf/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extsprintf/examples/simple.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extsprintf/jsl.node.conf" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extsprintf/lib/extsprintf.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/extsprintf/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fd-slicer/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fd-slicer/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fd-slicer/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fd-slicer/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fd-slicer/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fd-slicer/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fd-slicer/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fd-slicer/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/find-up/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/find-up/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/find-up/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/find-up/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/forever-agent/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/forever-agent/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/forever-agent/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/forever-agent/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/form-data/License" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/form-data/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/form-data/lib/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/form-data/lib/form_data.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/form-data/lib/populate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/form-data/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/copy-sync/copy-file-sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/copy-sync/copy-sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/copy-sync/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/copy/copy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/copy/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/copy/ncp.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/empty/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/ensure/file.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/ensure/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/ensure/link.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/ensure/symlink-paths.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/ensure/symlink-type.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/ensure/symlink.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/json/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/json/jsonfile.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/json/output-json-sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/json/output-json.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/mkdirs/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/mkdirs/mkdirs-sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/mkdirs/mkdirs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/mkdirs/win32.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/move/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/output/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/remove/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/util/assign.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/util/utimes.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/lib/walk/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs-extra/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs.realpath/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs.realpath/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs.realpath/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs.realpath/old.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/fs.realpath/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/function-source/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/function-source/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/function-source/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-function/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-function/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-function/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-function/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-function/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-function/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-function/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-object-property/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-object-property/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-object-property/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-object-property/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-object-property/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-object-property/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/generate-object-property/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/get-stdin/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/get-stdin/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/get-stdin/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/node_modules/assert-plus/AUTHORS" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/node_modules/assert-plus/CHANGES.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/node_modules/assert-plus/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/node_modules/assert-plus/assert.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/node_modules/assert-plus/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/getpass/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/glob/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/glob/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/glob/changelog.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/glob/common.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/glob/glob.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/glob/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/glob/sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-fs/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-fs/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-fs/fs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-fs/graceful-fs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-fs/legacy-streams.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-fs/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-fs/polyfills.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-readlink/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-readlink/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-readlink/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-readlink/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-readlink/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/graceful-readlink/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/bin/har-validator" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/async.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/error.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/runner.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/cache.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/cacheEntry.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/content.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/cookie.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/creator.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/entry.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/har.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/log.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/page.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/pageTimings.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/postData.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/record.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/request.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/response.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/lib/schemas/timings.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/har-validator/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/has-ansi/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/has-ansi/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/has-ansi/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/has-ansi/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/bower.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/dist/client.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/example/usage.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/lib/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/lib/client.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/lib/crypto.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/lib/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/lib/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/test/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/test/client.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/test/crypto.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/test/readme.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/test/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/test/uri.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hawk/test/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/CONTRIBUTING.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/lib/escape.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/test/escaper.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/test/modules/ignore.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/test/modules/test1.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/test/modules/test2.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hoek/test/modules/test3.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/home-path/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/home-path/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/home-path/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/home-path/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/home-path/jsdoc2md/README.hbs" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/home-path/lib/home-path.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/home-path/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/home-path/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hosted-git-info/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hosted-git-info/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hosted-git-info/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hosted-git-info/git-host-info.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hosted-git-info/git-host.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hosted-git-info/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/hosted-git-info/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/.dir-locals.el" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/CHANGES.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/http_signing.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/lib/parser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/lib/signer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/lib/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/lib/verify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/http-signature/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/indent-string/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/indent-string/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/indent-string/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/indent-string/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/inflight/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/inflight/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/inflight/inflight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/inflight/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/inherits/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/inherits/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/inherits/inherits.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/inherits/inherits_browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/inherits/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ini/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ini/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ini/ini.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ini/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-arrayish/.editorconfig" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-arrayish/.istanbul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-arrayish/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-arrayish/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-arrayish/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-arrayish/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-arrayish/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-arrayish/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-builtin-module/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-builtin-module/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-builtin-module/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-builtin-module/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-finite/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-finite/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-finite/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-finite/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-fullwidth-code-point/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-fullwidth-code-point/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-fullwidth-code-point/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-fullwidth-code-point/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/formats.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/node_modules/xtend/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/node_modules/xtend/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/node_modules/xtend/LICENCE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/node_modules/xtend/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/node_modules/xtend/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/node_modules/xtend/immutable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/node_modules/xtend/mutable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/node_modules/xtend/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/node_modules/xtend/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/require.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/fixtures/cosmic.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/additionalItems.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/additionalProperties.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/allOf.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/anyOf.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/bignum.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/default.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/definitions.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/dependencies.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/enum.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/format.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/items.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/maxItems.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/maxLength.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/maxProperties.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/maximum.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/minItems.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/minLength.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/minProperties.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/minimum.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/multipleOf.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/not.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/nullAndFormat.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/nullAndObject.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/oneOf.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/pattern.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/patternProperties.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/properties.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/ref.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/refRemote.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/required.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/type.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema-draft4/uniqueItems.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/json-schema.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-my-json-valid/test/misc.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-property/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-property/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-property/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-property/is-property.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-property/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-typedarray/LICENSE.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-typedarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-typedarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-typedarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-typedarray/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-utf8/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-utf8/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-utf8/is-utf8.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/is-utf8/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isarray/build/build.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isstream/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isstream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isstream/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isstream/LICENSE.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isstream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isstream/isstream.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isstream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/isstream/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/AUTHORS.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/almond.0" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/almond.1" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/jsdoc.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/lib/core.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/lib/curve255.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/lib/dh.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/lib/eddsa.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/lib/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jodid25519/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsbn/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsbn/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsbn/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsbn/example.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsbn/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsbn/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsbn/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsesc/LICENSE-MIT.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsesc/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsesc/bin/jsesc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsesc/jsesc.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsesc/man/jsesc.1" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsesc/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-00/hyper-schema" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-00/json-ref" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-00/links" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-00/schema" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-01/hyper-schema" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-01/json-ref" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-01/links" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-01/schema" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-02/hyper-schema" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-02/json-ref" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-02/links" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-02/schema" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-03/examples/address" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-03/examples/calendar" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-03/examples/card" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-03/examples/geo" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-03/examples/interfaces" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-03/hyper-schema" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-03/json-ref" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-03/links" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-03/schema" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-04/hyper-schema" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-04/links" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-04/schema" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-zyp-json-schema-03.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/draft-zyp-json-schema-04.xml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/lib/links.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/lib/validate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-schema/test/tests.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-stringify-safe/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-stringify-safe/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-stringify-safe/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-stringify-safe/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-stringify-safe/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-stringify-safe/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-stringify-safe/stringify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-stringify-safe/test/mocha.opts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/json-stringify-safe/test/stringify_test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonfile/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonfile/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonfile/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonfile/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonfile/appveyor.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonfile/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonfile/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonpointer/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonpointer/LICENSE.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonpointer/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonpointer/benchmark.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonpointer/jsonpointer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonpointer/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsonpointer/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsprim/CHANGES.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsprim/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsprim/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsprim/lib/jsprim.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/jsprim/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/keypress/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/keypress/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/keypress/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/keypress/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/klaw/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/klaw/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/klaw/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/klaw/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/klaw/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/klaw/src/assign.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/klaw/src/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/load-json-file/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/load-json-file/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/load-json-file/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/load-json-file/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/LICENSE.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/chunk.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/compact.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/difference.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/drop.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/dropRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/dropRightWhile.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/dropWhile.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/findIndex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/findLastIndex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/first.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/flatten.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/flattenDeep.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/head.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/indexOf.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/initial.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/intersection.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/last.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/lastIndexOf.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/object.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/pull.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/pullAt.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/remove.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/rest.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/slice.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/sortedIndex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/sortedLastIndex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/tail.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/take.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/takeRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/takeRightWhile.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/takeWhile.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/union.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/uniq.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/unique.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/unzip.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/without.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/xor.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/zip.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/array/zipObject.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/chain.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/lodash.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/reverse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/tap.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/thru.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/toJSON.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/toString.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/value.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/valueOf.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/wrapperChain.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/wrapperReverse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/wrapperToString.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/chain/wrapperValue.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/all.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/any.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/at.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/collect.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/contains.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/countBy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/detect.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/each.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/eachRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/every.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/filter.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/find.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/findLast.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/findWhere.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/foldl.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/foldr.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/forEach.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/forEachRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/groupBy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/include.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/includes.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/indexBy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/inject.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/invoke.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/map.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/max.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/min.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/partition.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/pluck.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/reduce.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/reduceRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/reject.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/sample.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/select.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/shuffle.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/size.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/some.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/sortBy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/sortByAll.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/collection/where.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/date.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/date/now.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/after.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/ary.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/backflow.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/before.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/bind.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/bindAll.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/bindKey.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/compose.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/curry.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/curryRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/debounce.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/defer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/delay.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/flow.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/flowRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/memoize.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/negate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/once.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/partial.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/partialRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/rearg.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/throttle.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/function/wrap.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/LazyWrapper.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/LodashWrapper.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/MapCache.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/SetCache.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arrayCopy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arrayEach.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arrayEachRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arrayEvery.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arrayFilter.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arrayMap.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arrayMax.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arrayMin.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arrayReduce.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arrayReduceRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/arraySome.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/assignDefaults.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/assignOwnDefaults.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseAssign.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseAt.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseBindAll.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseCallback.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseClone.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseCompareAscending.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseCopy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseCreate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseDelay.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseDifference.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseEach.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseEachRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseEvery.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseFilter.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseFind.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseFlatten.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseFor.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseForIn.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseForOwn.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseForOwnRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseForRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseFunctions.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseIndexOf.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseInvoke.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseIsEqual.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseIsEqualDeep.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseIsMatch.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseMap.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseMatches.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseMerge.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseMergeDeep.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseProperty.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/basePullAt.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseRandom.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseReduce.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseSetData.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseSlice.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseSome.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseSortBy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseToString.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseUniq.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseValues.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/baseWrapperValue.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/binaryIndex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/binaryIndexBy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/bindCallback.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/bufferClone.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/cacheIndexOf.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/cachePush.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/charAtCallback.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/charsLeftIndex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/charsRightIndex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/compareAscending.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/compareMultipleAscending.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/composeArgs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/composeArgsRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createAggregator.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createAssigner.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createBindWrapper.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createCache.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createCompounder.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createCtorWrapper.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createExtremum.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createHybridWrapper.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createPad.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createPartialWrapper.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/createWrapper.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/deburrLetter.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/equalArrays.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/equalByTag.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/equalObjects.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/escapeHtmlChar.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/escapeStringChar.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/extremumBy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/getData.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/getView.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/indexOfNaN.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/initCloneArray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/initCloneByTag.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/initCloneObject.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/isBindable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/isIndex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/isIterateeCall.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/isLength.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/isObjectLike.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/isSpace.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/isStrictComparable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/lazyClone.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/lazyReverse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/lazyValue.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/mapDelete.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/mapGet.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/mapHas.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/mapSet.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/mergeData.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/metaMap.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/pickByArray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/pickByCallback.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/reEscape.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/reEvaluate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/reInterpolate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/reorder.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/replaceHolders.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/setData.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/shimIsPlainObject.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/shimKeys.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/sortedUniq.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/toIterable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/toObject.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/trimmedLeftIndex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/trimmedRightIndex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/internal/unescapeHtmlChar.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/clone.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/cloneDeep.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isArguments.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isArray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isBoolean.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isDate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isElement.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isEmpty.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isEqual.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isError.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isFinite.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isFunction.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isMatch.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isNaN.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isNative.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isNull.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isNumber.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isObject.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isPlainObject.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isRegExp.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isString.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isTypedArray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/isUndefined.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/toArray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/lang/toPlainObject.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/number.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/number/random.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/assign.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/create.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/defaults.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/extend.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/findKey.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/findLastKey.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/forIn.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/forInRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/forOwn.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/forOwnRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/functions.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/has.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/invert.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/keys.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/keysIn.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/mapValues.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/merge.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/methods.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/omit.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/pairs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/pick.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/result.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/values.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/object/valuesIn.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/camelCase.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/capitalize.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/deburr.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/endsWith.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/escape.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/escapeRegExp.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/kebabCase.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/pad.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/padLeft.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/padRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/parseInt.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/repeat.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/snakeCase.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/startsWith.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/template.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/templateSettings.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/trim.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/trimLeft.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/trimRight.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/trunc.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/unescape.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/string/words.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/support.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/attempt.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/callback.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/constant.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/identity.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/iteratee.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/matches.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/mixin.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/noop.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/property.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/propertyOf.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/range.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/times.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/lodash/utility/uniqueId.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/loud-rejection/api.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/loud-rejection/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/loud-rejection/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/loud-rejection/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/loud-rejection/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/loud-rejection/register.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/map-obj/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/map-obj/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/map-obj/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/map-obj/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/meow/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/meow/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/meow/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/meow/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-db/HISTORY.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-db/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-db/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-db/db.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-db/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-db/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-types/HISTORY.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-types/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-types/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-types/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mime-types/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimatch/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimatch/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimatch/minimatch.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimatch/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/example/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/all_bool.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/bool.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/dash.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/default_bool.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/dotted.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/kv_short.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/long.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/num.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/parse_modified.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/short.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/stop_early.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/unknown.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minimist/test/whitespace.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/bin/minstache" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/node_modules/commander/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/node_modules/commander/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/node_modules/commander/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/node_modules/commander/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/node_modules/commander/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/node_modules/commander/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/node_modules/commander/lib/commander.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/node_modules/commander/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/minstache/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/bin/cmd.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/bin/usage.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/examples/pow.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/example/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/test/dash.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/test/default_bool.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/test/dotted.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/test/long.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/test/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/test/parse_modified.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/test/short.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/node_modules/minimist/test/whitespace.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/chmod.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/clobber.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/mkdirp.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/opts_fs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/opts_fs_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/perm.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/perm_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/race.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/rel.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/return.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/return_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/root.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/umask.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/mkdirp/test/umask_sync.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ms/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ms/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ms/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ms/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ms/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/ms/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare-har-plugin/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare-har-plugin/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare-har-plugin/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare-har-plugin/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare-har-plugin/devtools-har-extension/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare-har-plugin/devtools-har-extension/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare-har-plugin/devtools-har-extension/manifest.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare-har-plugin/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare-har-plugin/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare-har-plugin/preload.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/circle.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/lib/actions.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/lib/frame-manager.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/lib/ipc.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/lib/javascript.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/lib/nightmare.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/lib/preload.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/lib/runner.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/bb-xvfb" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/files/globals.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/files/jquery-1.9.0.min.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/files/jquery-2.1.1.min.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/files/nightmare-created.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/files/nightmare-error.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/files/nightmare-unended.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/files/server.crt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/files/server.key" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/files/test.css" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/cookies/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/evaluation/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/events/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/manipulation/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/manipulation/result.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/manipulation/results.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/navigation/a.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/navigation/b.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/navigation/c.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/navigation/hanging-resources.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/navigation/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/navigation/invalid-frame.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/navigation/invalid-image.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/navigation/valid-frame.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/options/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/preload/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/preload/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/rendering/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/fixtures/simple/index.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/mocha.opts" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/server.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nightmare/test/waitForX" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/LICENSE.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/benchmark/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/benchmark/bench.gnu" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/benchmark/bench.sh" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/benchmark/benchmark-native.c" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/benchmark/benchmark.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/bin/uuid" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/bower.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/test/compare_v1.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/test/test.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/node-uuid/uuid.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/AUTHORS" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/lib/extract_description.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/lib/fixer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/lib/make_warning.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/lib/normalize.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/lib/safe_format.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/lib/typos.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/lib/warning_messages.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/basic.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/consistency.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/dependencies.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/async.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/badscripts.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/bcrypt.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/coffee-script.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/http-server.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/movefile.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/no-description.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/node-module_exist.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/npm.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/read-package-json.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/request.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/fixtures/underscore.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/github-urls.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/mixedcase-names.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/normalize.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/scoped.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/scripts.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/strict.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/normalize-package-data/test/typo.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/bin.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/collaborators.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/test/cli.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/test/resume.html" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/test/resume.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/nugget/usage.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/number-is-nan/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/number-is-nan/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/number-is-nan/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/number-is-nan/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/oauth-sign/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/oauth-sign/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/oauth-sign/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/oauth-sign/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-assign/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-assign/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-assign/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-assign/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/foreach.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/isArguments.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/shim.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/test/foreach.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/test/isArguments.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/object-keys/test/shim.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/once/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/once/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/once/once.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/once/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/parse-json/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/parse-json/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/parse-json/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/parse-json/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/parse-json/vendor/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/parse-json/vendor/unicode.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-exists/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-exists/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-exists/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-exists/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-is-absolute/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-is-absolute/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-is-absolute/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-is-absolute/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-type/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-type/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-type/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/path-type/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pend/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pend/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pend/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pend/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pend/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pify/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pify/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pify/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pify/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pinkie-promise/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pinkie-promise/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pinkie-promise/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pinkie-promise/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pinkie/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pinkie/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pinkie/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pinkie/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pretty-bytes/cli.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pretty-bytes/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pretty-bytes/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pretty-bytes/pretty-bytes.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/pretty-bytes/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/process-nextick-args/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/process-nextick-args/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/process-nextick-args/license.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/process-nextick-args/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/process-nextick-args/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/process-nextick-args/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/progress-stream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/progress-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/progress-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/progress-stream/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/progress-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/progress-stream/test/http.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/progress-stream/test/request.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/.eslintignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/.eslintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/CONTRIBUTING.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/dist/qs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/lib/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/lib/stringify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/lib/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/test/parse.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/test/stringify.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/qs/test/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/LICENSE.APACHE2" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/LICENSE.BSD" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/LICENSE.MIT" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/lib/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/test/ini.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/test/nested-env-vars.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rc/test/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/read-pkg-up/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/read-pkg-up/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/read-pkg-up/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/read-pkg-up/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/read-pkg/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/read-pkg/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/read-pkg/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/read-pkg/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/float.patch" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/lib/_stream_duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/lib/_stream_passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/lib/_stream_readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/lib/_stream_transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/lib/_stream_writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/readable-stream/writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/redent/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/redent/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/redent/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/redent/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/repeating/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/repeating/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/repeating/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/repeating/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/.eslintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/CONTRIBUTING.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/codecov.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/lib/auth.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/lib/cookies.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/lib/getProxyFromURI.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/lib/har.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/lib/helpers.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/lib/multipart.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/lib/oauth.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/lib/querystring.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/lib/redirect.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/lib/tunnel.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/request/request.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rimraf/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rimraf/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rimraf/bin.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rimraf/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/rimraf/rimraf.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/semver/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/semver/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/semver/bin/semver" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/semver/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/semver/range.bnf" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/semver/semver.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/signal-exit/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/signal-exit/LICENSE.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/signal-exit/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/signal-exit/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/signal-exit/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/signal-exit/signals.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/single-line-log/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/single-line-log/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/single-line-log/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/single-line-log/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/single-line-log/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/single-line-log/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sliced/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sliced/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sliced/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sliced/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sliced/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/examples/offset.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/examples/time.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sntp/test/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-correct/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-correct/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-correct/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-correct/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-expression-parse/AUTHORS" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-expression-parse/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-expression-parse/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-expression-parse/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-expression-parse/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-expression-parse/parser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-license-ids/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-license-ids/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-license-ids/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/spdx-license-ids/spdx-license-ids.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/speedometer/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/speedometer/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/speedometer/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/speedometer/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/bench.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/isarray/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/isarray/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/isarray/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/isarray/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/isarray/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/isarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/isarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/isarray/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/.zuul.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/doc/stream.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/doc/wg-meetings/2015-01-30.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/lib/_stream_duplex.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/lib/_stream_passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/lib/_stream_readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/lib/_stream_transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/lib/_stream_writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/passthrough.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/readable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/transform.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/readable-stream/writable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/through2/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/through2/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/through2/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/through2/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/through2/through2.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/xtend/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/xtend/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/xtend/LICENCE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/xtend/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/xtend/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/xtend/immutable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/xtend/mutable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/xtend/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/node_modules/xtend/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/split2/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/bin/sshpk-conv" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/bin/sshpk-sign" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/bin/sshpk-verify" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/algs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/certificate.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/dhe.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/ed-compat.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/errors.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/fingerprint.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/formats/auto.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/formats/openssh-cert.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/formats/pem.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/formats/pkcs1.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/formats/pkcs8.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/formats/rfc4253.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/formats/ssh-private.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/formats/ssh.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/formats/x509-pem.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/formats/x509.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/identity.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/key.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/private-key.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/signature.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/ssh-buffer.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/lib/utils.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/man/man1/sshpk-conv.1" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/man/man1/sshpk-sign.1" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/man/man1/sshpk-verify.1" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/node_modules/assert-plus/AUTHORS" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/node_modules/assert-plus/CHANGES.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/node_modules/assert-plus/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/node_modules/assert-plus/assert.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/node_modules/assert-plus/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sshpk/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/string-width/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/string-width/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/string-width/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/string-width/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/string_decoder/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/string_decoder/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/string_decoder/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/string_decoder/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/string_decoder/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/stringstream/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/stringstream/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/stringstream/LICENSE.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/stringstream/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/stringstream/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/stringstream/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/stringstream/stringstream.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-ansi/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-ansi/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-ansi/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-ansi/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-bom/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-bom/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-bom/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-bom/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-indent/cli.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-indent/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-indent/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-indent/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-indent/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-json-comments/cli.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-json-comments/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-json-comments/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-json-comments/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/strip-json-comments/strip-json-comments.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sumchecker/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sumchecker/NEWS.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sumchecker/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sumchecker/build.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sumchecker/lcov.info" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/sumchecker/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/supports-color/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/supports-color/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/supports-color/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/supports-color/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/throttleit/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/throttleit/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/throttleit/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/throttleit/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/throttleit/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/throttleit/example.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/throttleit/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/throttleit/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/through2/.jshintrc" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/through2/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/through2/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/through2/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/through2/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/through2/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/through2/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/through2/through2.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tough-cookie/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tough-cookie/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tough-cookie/lib/cookie.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tough-cookie/lib/memstore.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tough-cookie/lib/pathMatch.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tough-cookie/lib/permuteDomain.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tough-cookie/lib/pubsuffix.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tough-cookie/lib/store.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tough-cookie/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/trim-newlines/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/trim-newlines/license" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/trim-newlines/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/trim-newlines/readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tunnel-agent/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tunnel-agent/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tunnel-agent/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tunnel-agent/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tweetnacl/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tweetnacl/CHANGELOG.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tweetnacl/COPYING.txt" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tweetnacl/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tweetnacl/nacl-fast.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tweetnacl/nacl-fast.min.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tweetnacl/nacl.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tweetnacl/nacl.min.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/tweetnacl/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/typedarray/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/typedarray/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/typedarray/example/tarray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/typedarray/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/typedarray/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/typedarray/readme.markdown" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/typedarray/test/server/undef_globals.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/typedarray/test/tarray.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/util-deprecate/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/util-deprecate/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/util-deprecate/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/util-deprecate/browser.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/util-deprecate/node.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/util-deprecate/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/validate-npm-package-license/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/validate-npm-package-license/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/validate-npm-package-license/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/validate-npm-package-license/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/.gitmodules" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/Makefile.targ" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/examples/levels-verror.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/examples/levels-werror.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/examples/varargs.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/examples/verror.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/examples/werror.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/jsl.node.conf" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/lib/verror.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/tests/tst.inherit.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/tests/tst.verror.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/verror/tests/tst.werror.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/History.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/Readme.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/bin/vo" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/component.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/dist/vo.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/dist/vo.min.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/lib/compile.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/lib/pipeline.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/lib/stack.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/lib/type.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/lib/wrap.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/log" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/vo/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/wrappy/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/wrappy/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/wrappy/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/wrappy/wrappy.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/xtend/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/xtend/LICENCE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/xtend/Makefile" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/xtend/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/xtend/has-keys.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/xtend/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/xtend/mutable.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/xtend/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/xtend/test.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/yauzl/.npmignore" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/yauzl/.travis.yml" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/yauzl/LICENSE" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/yauzl/README.md" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/yauzl/index.js" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/node_modules/yauzl/package.json" />
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/ext/nightmare/package.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
    </list>
    <ignored path="memento-pedia-tornado.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="memento-pedia-tornado" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="erikaris &lt;erikaris1515@gmail.com&gt;" />
        <option value="erikaris" />
      </list>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/tornado_blueprint/__init__.py" />
        <option value="$PROJECT_DIR$/tornado_blueprint/template_loader.py" />
        <option value="$PROJECT_DIR$/app/templates/layout.html" />
        <option value="$PROJECT_DIR$/app/modules/home/templates_old/index.html" />
        <option value="$PROJECT_DIR$/env-linux/local/lib/python2.7/site-packages/tornado/web.py" />
        <option value="$PROJECT_DIR$/tornado_blueprint/request_handler.py" />
        <option value="$PROJECT_DIR$/app/modules/dashboard/__init__.py" />
        <option value="$PROJECT_DIR$/app/modules/settings/__init__.py" />
        <option value="$PROJECT_DIR$/tornado_blueprint/application.py" />
        <option value="$PROJECT_DIR$/env-linux/lib/python2.7/site-packages/tornado/web.py" />
        <option value="$PROJECT_DIR$/tornado_blueprint/blueprint.py" />
        <option value="$PROJECT_DIR$/lib/multithreaded_crawl.py" />
        <option value="$PROJECT_DIR$/test_uri.txt" />
        <option value="$PROJECT_DIR$/ext/crawl.py" />
        <option value="$PROJECT_DIR$/app/modules/home/static/check.js" />
        <option value="$PROJECT_DIR$/ext/selenium.py" />
        <option value="$PROJECT_DIR$/ext/crawl_selenium.py" />
        <option value="$PROJECT_DIR$/app/modules/home/models.py" />
        <option value="$PROJECT_DIR$/ext/blueprint/application.py" />
        <option value="$PROJECT_DIR$/ext/blueprint/request_handler.py" />
        <option value="$PROJECT_DIR$/app/__init__.py" />
        <option value="$PROJECT_DIR$/app/templates/frontpage.html" />
        <option value="$PROJECT_DIR$/ext/tools.py" />
        <option value="$PROJECT_DIR$/env-linux/lib/python2.7/site-packages/unicodecsv/py3.py" />
        <option value="$PROJECT_DIR$/test/damage-old.py" />
        <option value="$PROJECT_DIR$/test/damage.py" />
        <option value="$PROJECT_DIR$/app/modules/home/templates/index.html" />
        <option value="$PROJECT_DIR$/app/modules/api/templates/index.html" />
        <option value="$PROJECT_DIR$/app/modules/home/templates/check.html" />
        <option value="$PROJECT_DIR$/ext/blueprint/blueprint.py" />
        <option value="$PROJECT_DIR$/config.py" />
        <option value="$PROJECT_DIR$/app/modules/home/__init__.py" />
        <option value="$PROJECT_DIR$/app/modules/api/__init__.py" />
        <option value="$PROJECT_DIR$/app/modules/home/templates/hierapolis/index.html" />
        <option value="$PROJECT_DIR$/app/modules/home/templates/hierapolis/check.html" />
        <option value="$PROJECT_DIR$/app/modules/api/templates/hierapolis/index.html" />
        <option value="$PROJECT_DIR$/app/static/assets/hierapolis/style.css" />
        <option value="$PROJECT_DIR$/app/static/assets/templatevamp/css/style.css" />
        <option value="$PROJECT_DIR$/app/modules/home/templates/templatevamp/index.html" />
        <option value="$PROJECT_DIR$/app/modules/home/templates/templatevamp/_summary.html" />
        <option value="$PROJECT_DIR$/app/templates/templatevamp.html" />
        <option value="$PROJECT_DIR$/app/modules/home/templates/templatevamp/check.html" />
        <option value="$PROJECT_DIR$/ext/selenium/crawl.py" />
        <option value="$PROJECT_DIR$/ext/selenium/__init__.py" />
        <option value="$PROJECT_DIR$/ext/phantomjs/crawl.js" />
        <option value="$PROJECT_DIR$/start.py" />
        <option value="$PROJECT_DIR$/ext/damage.py" />
        <option value="$PROJECT_DIR$/xvfb-start.sh" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="y" value="30" />
    <option name="width" value="1366" />
    <option name="height" value="738" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
          <State>
            <id>BashSupport</id>
          </State>
          <State>
            <id>Python</id>
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>PyCompatibilityInspection</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="1" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scratches" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="test" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="ext" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="ext" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="phantomjs" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="web-memento-damage" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="ext" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="nightmare" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
    <property name="settings.editor.splitter.proportion" value="0.2" />
    <property name="SearchEverywhereHistoryKey" value="&#9;FILE&#9;file:///media/DATA/ERIKA/Summer Work/MementoPediaProject/memento-pedia-tornado/tornado_blueprint/request_handler.py" />
    <property name="DefaultHtmlFileTemplate" value="HTML File" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth0" value="103" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder0" value="0" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth1" value="111" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder1" value="1" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth2" value="116" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder2" value="2" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth3" value="902" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder3" value="3" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth0" value="103" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder0" value="0" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth1" value="111" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder1" value="1" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth2" value="116" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder2" value="2" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth3" value="902" />
    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder3" value="3" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/ext/selenium" />
      <recent name="$PROJECT_DIR$/app/modules/api/templates/hierapolis" />
      <recent name="$PROJECT_DIR$/app/modules/home/templates/hierapolis" />
      <recent name="$PROJECT_DIR$/app/modules/home/templates" />
      <recent name="$PROJECT_DIR$/ext/phantomjs" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/app/modules/api/templates/dashgumfree" />
      <recent name="$PROJECT_DIR$/app/modules/home/templates/dashgumfree" />
      <recent name="$PROJECT_DIR$/app/models" />
      <recent name="$PROJECT_DIR$/app/modules/api" />
      <recent name="$PROJECT_DIR$/ext/phantomjs" />
    </key>
  </component>
  <component name="RunManager" selected="Python.start">
    <configuration default="false" name="xvfb-start.sh" type="BashConfigurationType" factoryName="Bash" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="INTERPRETER_PATH" value="/bin/bash" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/xvfb-start.sh" />
      <option name="PARAMETERS" value="" />
      <module name="memento-pedia-tornado" />
      <envs />
      <method />
    </configuration>
    <configuration default="false" name="start" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="memento-pedia-tornado" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/start.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <method />
    </configuration>
    <configuration default="false" name="selenium" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/ext" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="memento-pedia-tornado" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/ext/crawl_selenium.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <method />
    </configuration>
    <configuration default="false" name="__init__" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/ext/selenium" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="memento-pedia-tornado" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/ext/selenium/__init__.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="BashConfigurationType" factoryName="Bash">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="INTERPRETER_PATH" value="/bin/bash" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="memento-pedia-tornado" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="Tox" factoryName="Tox">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="justin_revision" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Attests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="memento-pedia-tornado" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="memento-pedia-tornado" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Nosetests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="memento-pedia-tornado" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="Unittests">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="memento-pedia-tornado" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="PUREUNITTEST" value="true" />
      <option name="PARAMS" value="" />
      <option name="USE_PARAM" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="tests" factoryName="py.test">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="memento-pedia-tornado" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <option name="testToRun" value="" />
      <option name="keywords" value="" />
      <option name="params" value="" />
      <option name="USE_PARAM" value="false" />
      <option name="USE_KEYWORD" value="false" />
      <method />
    </configuration>
    <list size="4">
      <item index="0" class="java.lang.String" itemvalue="Bash.xvfb-start.sh" />
      <item index="1" class="java.lang.String" itemvalue="Python.start" />
      <item index="2" class="java.lang.String" itemvalue="Python.selenium" />
      <item index="3" class="java.lang.String" itemvalue="Python.__init__" />
    </list>
    <recent_temporary>
      <list size="3">
        <item index="0" class="java.lang.String" itemvalue="Python.start" />
        <item index="1" class="java.lang.String" itemvalue="Python.__init__" />
        <item index="2" class="java.lang.String" itemvalue="Python.selenium" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="StructureViewFactory">
    <option name="AUTOSCROLL_FROM_SOURCE" value="true" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="abb02a85-edb0-4070-84af-33ef9785e6b3" name="Default" comment="" />
      <created>1464509840448</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1464509840448</updated>
    </task>
    <task id="LOCAL-00001" summary="Fix damage algorithm">
      <created>1465799698225</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1465799698225</updated>
    </task>
    <task id="LOCAL-00002" summary="Styling Result">
      <created>1465807054598</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1465807054598</updated>
    </task>
    <task id="LOCAL-00003" summary="Fix Justin Code">
      <created>1472950029023</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1472950029023</updated>
    </task>
    <task id="LOCAL-00004" summary="Use documentOwner size for each image viewport">
      <created>1472953670434</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1472953670434</updated>
    </task>
    <task id="LOCAL-00005" summary="Set damage to 1 if URI status is not 200">
      <created>1472972826490</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1472972826490</updated>
    </task>
    <task id="LOCAL-00006" summary="Add onError and onConsoleMessage">
      <created>1472977010968</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1472977010968</updated>
    </task>
    <task id="LOCAL-00007" summary="Check Final Status Code Before Process Total Damage">
      <created>1472995279438</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1472995279438</updated>
    </task>
    <task id="LOCAL-00008" summary="Autocomplete schema URI">
      <created>1473256536980</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1473256536980</updated>
    </task>
    <task id="LOCAL-00009" summary="Start templating">
      <created>1474079875710</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1474079875711</updated>
    </task>
    <task id="LOCAL-00010" summary="Create new theme">
      <created>1474080039100</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1474080039100</updated>
    </task>
    <task id="LOCAL-00011" summary="New theme is used">
      <created>1474238836629</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1474238836629</updated>
    </task>
    <task id="LOCAL-00012" summary="Fix style">
      <created>1474246516166</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1474246516166</updated>
    </task>
    <task id="LOCAL-00013" summary="Change colorset to Maroon">
      <created>1474381403109</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1474381403109</updated>
    </task>
    <task id="LOCAL-00014" summary="Change colorset to Maroon">
      <created>1474382816739</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1474382816739</updated>
    </task>
    <task id="LOCAL-00015" summary="Change simulation tool from jQuery to Native">
      <created>1474984229386</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1474984229386</updated>
    </task>
    <task id="LOCAL-00016" summary="Blacklist INTERNAL">
      <created>1476150084107</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1476150084107</updated>
    </task>
    <task id="LOCAL-00017" summary="add resolution in xvfb-start">
      <created>1476168497795</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1476168497795</updated>
    </task>
    <option name="localTasksCounter" value="18" />
    <servers />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="30" width="1366" height="738" extended-state="6" />
    <editor active="false" />
    <layout>
      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.22348484" sideWeight="0.4876923" order="1" side_tool="false" content_ui="combo" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32923076" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="true" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3276923" sideWeight="0.5" order="11" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="true" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32715008" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Python Console" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32615384" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="true" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.30236486" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.17727272" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="true" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3260135" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.19843137" sideWeight="0.5123077" order="0" side_tool="true" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="true" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3246154" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Fix damage algorithm" />
    <MESSAGE value="Styling Result" />
    <MESSAGE value="Fix Justin Code" />
    <MESSAGE value="Use documentOwner size for each image viewport" />
    <MESSAGE value="Set damage to 1 if URI status is not 200" />
    <MESSAGE value="Add onError and onConsoleMessage" />
    <MESSAGE value="Check Final Status Code Before Process Total Damage" />
    <MESSAGE value="Autocomplete schema URI" />
    <MESSAGE value="Start templating" />
    <MESSAGE value="Create new theme" />
    <MESSAGE value="New theme is used" />
    <MESSAGE value="Fix style" />
    <MESSAGE value="Change colorset to Maroon" />
    <MESSAGE value="Change simulation tool from jQuery to Native" />
    <MESSAGE value="Blacklist INTERNAL" />
    <MESSAGE value="add resolution in xvfb-start" />
    <option name="LAST_COMMIT_MESSAGE" value="add resolution in xvfb-start" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="2" />
    </breakpoint-manager>
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app.log">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/models/models.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="11" column="17" selection-start-line="11" selection-start-column="4" selection-end-line="11" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/phantomjs/mimetype.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/test_uri.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/lib/python2.7/pickle.py" />
    <entry file="file:///usr/lib/python2.7/subprocess.py" />
    <entry file="file://$PROJECT_DIR$/../../justin_revision/rasterize.js" />
    <entry file="file:///usr/lib/python2.7/htmlentitydefs.py" />
    <entry file="file:///usr/lib/python2.7/urlparse.py" />
    <entry file="file:///usr/lib/python2.7/HTMLParser.py" />
    <entry file="file://$APPLICATION_HOME_DIR$/helpers/python-skeletons/io.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="296" column="8" selection-start-line="296" selection-start-column="8" selection-end-line="296" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../../justin_revision/measureMemento.pl" />
    <entry file="file://$PROJECT_DIR$/ext/blueprint/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/blueprint/request_handler.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="51" column="31" selection-start-line="51" selection-start-column="31" selection-end-line="51" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/blueprint/application.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="72" column="8" selection-start-line="72" selection-start-column="8" selection-end-line="72" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env-linux/lib/python2.7/site-packages/tornado/web.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="696" column="8" selection-start-line="696" selection-start-column="8" selection-end-line="696" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/blueprint/template_loader.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="87" column="0" selection-start-line="87" selection-start-column="0" selection-end-line="87" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/lib/python2.7/inspect.py" />
    <entry file="file://$PROJECT_DIR$/app/modules/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="13" column="55" selection-start-line="13" selection-start-column="55" selection-end-line="13" selection-end-column="55" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/blueprint/blueprint.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="65" column="64" selection-start-line="65" selection-start-column="64" selection-end-line="65" selection-end-column="64" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/home/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="9" column="42" selection-start-line="9" selection-start-column="42" selection-end-line="9" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/config.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="18" column="34" selection-start-line="18" selection-start-column="34" selection-end-line="18" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/home/templates/dashgumfree/check.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="2" column="29" selection-start-line="2" selection-start-column="17" selection-end-line="2" selection-end-column="29" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/home/templates/hierapolis/check.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="2" column="29" selection-start-line="2" selection-start-column="29" selection-end-line="2" selection-end-column="29" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/home/templates/hierapolis/index.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="22" selection-start-line="0" selection-start-column="22" selection-end-line="0" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/api/templates/dashgumfree/index.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="2" column="20" selection-start-line="2" selection-start-column="17" selection-end-line="2" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/home/templates/dashgumfree/index.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="11" column="21" selection-start-line="11" selection-start-column="21" selection-end-line="11" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/templates/hierapolis.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/static/assets/hierapolis/style.css">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="118831" selection-start-line="0" selection-start-column="118831" selection-end-line="0" selection-end-column="118831" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/tools.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="13" column="0" selection-start-line="13" selection-start-column="0" selection-end-line="13" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/templates/dashgumfree.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="30" column="26" selection-start-line="30" selection-start-column="26" selection-end-line="30" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/api/templates/templatevamp/index.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/api/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="15">
          <caret line="51" column="14" selection-start-line="51" selection-start-column="14" selection-end-line="51" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/static/assets/templatevamp/css/style.css">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="312" column="1" selection-start-line="308" selection-start-column="0" selection-end-line="312" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/home/templates/templatevamp/index.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="570">
          <caret line="38" column="35" selection-start-line="38" selection-start-column="35" selection-end-line="38" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/home/templates/templatevamp/_summary.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="30">
          <caret line="2" column="29" selection-start-line="2" selection-start-column="29" selection-end-line="2" selection-end-column="29" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/templates/templatevamp.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="540">
          <caret line="36" column="31" selection-start-line="36" selection-start-column="31" selection-end-line="36" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/app/modules/home/templates/templatevamp/check.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1680">
          <caret line="112" column="23" selection-start-line="112" selection-start-column="23" selection-end-line="112" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/selenium/crawl.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="5625">
          <caret line="492" column="0" selection-start-line="492" selection-start-column="0" selection-end-line="492" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env-linux/lib/python2.7/site-packages/selenium/webdriver/common/desired_capabilities.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-488">
          <caret line="21" column="6" selection-start-line="21" selection-start-column="6" selection-end-line="21" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env-linux/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3450">
          <caret line="243" column="8" selection-start-line="243" selection-start-column="8" selection-end-line="243" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env-linux/lib/python2.7/site-packages/selenium/webdriver/support/wait.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="26" column="8" selection-start-line="26" selection-start-column="8" selection-end-line="26" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/selenium/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="37">
          <caret line="25" column="18" selection-start-line="25" selection-start-column="18" selection-end-line="25" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/start.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="165">
          <caret line="14" column="17" selection-start-line="14" selection-start-column="17" selection-end-line="14" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/damage.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="531">
          <caret line="110" column="51" selection-start-line="110" selection-start-column="33" selection-end-line="110" selection-end-column="51" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/phantomjs/crawl.js">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1170">
          <caret line="78" column="11" selection-start-line="75" selection-start-column="8" selection-end-line="78" selection-end-column="11" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ext/damage.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="111">
          <caret line="390" column="0" selection-start-line="390" selection-start-column="0" selection-end-line="390" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/xvfb-start.sh">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="60">
          <caret line="4" column="47" selection-start-line="4" selection-start-column="47" selection-end-line="4" selection-end-column="47" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>